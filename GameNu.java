/* Name:
Date:
Description: 
Grade: 
*/

/* IMPLEMENT THE MEHODS IN THE GIVEN ORDER*/
import java.util.*;
public class GameNu //<------- must change the name to include your last name
{
  //No code here
}
class Game {    
   public static void main(String[] args)
   {
      Scanner kb = new Scanner(System.in);
      interact(kb);
      action(kb);
   }
   
   
     /* 
     The purpose for this method is to ask the user to enter a positive integer value
     This method gets two paramters Scanner and a string. The string s holds the message being displayed for the user
      This method asks the user to enter a positive number. 
      As long as the entered value is not positive, the method will keep asking the user
      
      */  
   public static int prompt(Scanner kb, String s) 
   {
      int input = -1;
      do 
      { 
         System.out.print(s);
         while (!kb.hasNextInt())
         {
            System.out.println("Invalid input.");
            kb.next();
         }
         input = kb.nextInt();
         if (input < 0)
         {
            System.out.println("Invalid input.");
         }
      }
             while (input < 0);
      return input; 
   }      
      //1. declare a varibale of type int to hold the user's input
        
       //2. display the string s
        
       //3. read the user's input using the kb object and store it in the variable declared in step 1
       
       
       //while the user's input is less than zero 
      
          // Display a message that your input is not valid
          
          // display the stirng s
          
          // read the user's input and store it in the vaibale declared at step 1 of the method
         
      //change this line to return the variable you declared at the step 1 of the method
   
  
   /* This method displays the intro given in the sample output. It must match excatly with the sample output. Refer to the provided
   output
   */
   public static void interact(Scanner kb)
   {
      System.out.print("Hello, I am a computer playing a guessing game with you. What would you like to call me? ");
      String name = kb.nextLine();
      System.out.printf("Wow, I really like the name %s.%n", name);
      System.out.print("What is your name? ");
      String player = kb.nextLine();
      System.out.printf("Hey %s, I am excited to play the guessing game with you.%n", player);
      System.out.println("I will think of a number between a low and a high value entered by you and will allow you to guess until you get it.");
      System.out.println("For each guess, I will give you a hint whether the right answer is higher or lower than your guess.\n"); 
   }
   
   

         
    /* this method gets two numbers called guess and randNum
    if guess is greater than randNum then return "Lower"
    else if guess is less than randNum return "Higher"
    else return match*/
    
   public static String match(int guess, int randNum) 
   {
      if (randNum < guess)
      {
         return "Higher";
      }
      else if (randNum > guess)
      {
         return "Lower";
      }
      else
      {
         return "Match";
      } 
   }
/*
  this method displays the result on the screen. 
  This method gets two parameters representing the number of the games the person played and the total guesses 
  made for all the games played
*/
   public static void report(int numGames, int totGuesses) 
   {
      System.out.printf("*******Congratulations! You got it right in %d guess(es)%n", totGuesses);
   }
   
   
   /*This method plays the game. it will generate a random number between min and max.
     asks the user to guess the number generated by the computer. As long as the user is not making the correct guess
     will keep propmting the user. Once the user makes a correct guess, it will end the game
     Also it keeps track of the number of the guesses that the user has made. 
     Return: This method returns the number of the guesses the person made 
     Refer to the sample output
     
     
    */ 
   public static int funGame(Scanner console, int min, int max) 
   {
      Random rand = new Random();
      int answer = rand.nextInt(max - min + 1) + min;
      int guess = 0;
      int count = 0;
      console.nextInt();
      
      System.out.printf("I'm thinking of a number between %d and %d ...%n", min, max);
      System.out.println("Give me a few seconds then enter any key to start the game");
      console.nextLine();     
   
      while (guess != answer) 
      {
         count++;
         guess = prompt(console, "guess? ");
         String result = match(answer, guess);
         System.out.println(result);
         if (result.equals("Match"))
         {
            return count;
         }
      }
      return count;
   } 
         
        //1. create a Random class object
        
        //2. Generate a random number between the given  min and max and store it in a variable. This variable is holding the computer pick
        
        //3. declare a variable to hold the user's guess, initialize it to zero
         
        //4. declare a variable to hold the number of the guesses the person will make per game, set it to zero
         
        //5. flush the buffer
         
        //6. prompt the user that I am thinking of a numbr between min and max. the actual min and max values must be displayed(refer to the sample output
        
        //7. display the message saying give me a few seconds to think , then enter any key to continue
         
         
        //8. flush the buffer
        
       // while the user's guess does not equal the computer pick
         
           //increment the variable declared in step 4
             
             
            //prompt the user to enter a  guess
             
            //read the user's input and store the user's input in the variable you declared at step 3
             
            
            //call the  method match and store the return of this method in a variable called result
             
            //if thevariable result contains "match"
         
                  //display the congrat message
                  //display the variable declared in step 4 which holds the number of the guesses that the person made
         
           // else
               // display the the content of the variable result       
                
                         
      //end of while loop
      // change this line to return the variable you declared at step 4 which is the number of the guesses made
   
   
   /*    LAST METHOD TO IMPLEMENT*/

    /* This method calls the other methods to get the game started.*/
   public static void action(Scanner console)  
   {      
      int numGames = 0; // total number of the games played by the person
      int totGuesses = 0; // total guesses for all the games played
      int min = 0; // holds the min value entered by the user
      int max = 0 ;//holds the max value entered by the user
      String repeat = "yes";           
      while (repeat.equalsIgnoreCase("yes")) {// allows the player to play many rounds of the game
         String s = "Enter a low value :";
         String s1 = "Enter the high value:";
         min = prompt(console, s);
         max = prompt(console, s1);
         while (max>min);
         {
            System.out.println("You entered an invalid value for max. Max must be greater than min. lets start all over again\n");
            min = prompt(console, s);
            max = prompt(console, s1);
         } 
         funGame(console, min, max);
         numGames++;
         System.out.println("Would you like to play again?");
         repeat = console.next();
         System.out.println();
      }
   }             
         

         
         //1. call the method prompt and pass the console, and s value to it, store the result in the vaiable min 
         
         
         
          //2. call the method prompt and pass console, and s1 value to it, store the result in the vaiable max
         
         // while max is less than min  
         
            //call the method prompt and pass  console and s
            
            //call the method prompt and pass console and s1
           
             
            
         //end while
         //call the method funGame with the proper parameters and store the result in a variable called guesses
           
         //add the guesses to totGusses
          
         //increment numGames
         
         //prompt the user if they want to play again or not
         
         //read the user's respond in the varibale repeat
         
       
      //call the method report and pass numGames and totGusses
}       
   


